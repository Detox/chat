// Generated by LiveScript 1.5.0
/**
 * @package Detox chat
 * @author  Nazar Mokrynskyi <nazar@mokrynskyi.com>
 * @license 0BSD
 */
(function(){
  function Wrapper(detoxCore, detoxCrypto, fixedSizeMultiplexer, asyncEventer){
    /**
     * @constructor
     *
     * @param {!Object}	core_instance	Detox core instance
     *
     * @return {!Chat}
     */
    function Chat(core_instance){
      if (!(this instanceof Chat)) {
        return new Chat(core_instance);
      }
      asyncEventer.call(this);
    }
    Chat.prototype = Object.assign(Object.create(asyncEventer.prototype), Chat.prototype);
    Object.defineProperty(Chat.prototype, 'constructor', {
      enumerable: false,
      value: Chat
    });
    return {
      'ready': function(callback){
        var wait_for;
        wait_for = 2;
        function ready(){
          --wait_for;
          if (!wait_for) {
            callback();
          }
        }
        detoxCore['ready'](ready);
        detoxCrypto['ready'](ready);
      },
      'Chat': Chat
    };
  }
  if (typeof define === 'function' && define['amd']) {
    define(['@detox/core', '@detox/crypto', 'fixed-size-multiplexer', 'async-eventer'], Wrapper);
  } else if (typeof exports === 'object') {
    module.exports = Wrapper(require('@detox/core'), require('@detox/crypto'), require('fixed-size-multiplexer'), require('async-eventer'));
  } else {
    this['detox_chat'] = Wrapper(this['detox_core'], this['detox_crypto'], this['fixed_size_multiplexer'], this['async_eventer']);
  }
}).call(this);
